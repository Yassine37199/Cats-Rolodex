{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","cat","id","name","email","CardList","cats","map","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchtext","target","value","state","fetch","then","response","json","users","this","filteredCats","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAKaA,G,YAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAAMI,IAAIC,GAApC,6BAClB,6BAAKL,EAAMI,IAAIE,OACf,4BAAIN,EAAMI,IAAIG,aCJbC,G,MAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,KAAKC,KACR,SAAAN,GAAG,OAAI,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,WCLzBM,G,MAAY,SAACX,GAEvB,OACK,uBACAC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,iBCgCTC,E,kDApCb,aAAc,IAAD,8BACb,gBAeAD,aAAe,SAAAE,GACb,EAAKC,SAAS,CAACC,WAAaF,EAAEG,OAAOC,SAfvC,EAAKC,MAAQ,CACXb,KAAO,GACPU,WAAa,IAJF,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAC3BT,KAAOkB,S,+BASD,IAAD,EACqBC,KAAKN,MAA1Bb,EADA,EACAA,KAAOU,EADP,EACOA,WACRU,EAAepB,EAAKqB,QAAO,SAAA1B,GAAG,OAClCA,EAAIE,KAAKyB,cAAcC,SAASb,EAAWY,kBAE7C,OACE,sBAAK9B,UAAU,MAAf,UACA,8CACA,cAAC,EAAD,CAAWY,YAAY,aAAaE,aAAca,KAAKb,eACvD,cAAC,EAAD,CAAUN,KAAMoB,W,GA/BJI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c1ef30e.chunk.js","sourcesContent":["import {React} from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\n\r\nexport const Card = (props) => {\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"cat\" src={`https://robohash.org/${props.cat.id}/?set=set4&size=180x180`}/>\r\n            <h2>{props.cat.name}</h2>\r\n            <p>{props.cat.email}</p>\r\n        </div>\r\n    )\r\n}","import {React} from \"react\";\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = (props) => {\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.cats.map( \r\n                cat => <Card key={cat.id} cat={cat} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\n\r\n\r\n\r\nexport const SearchBox = (props) => {\r\n\r\n   return (\r\n        <input \r\n        className='search' \r\n        type='search' \r\n        placeholder={props.placeholder}\r\n        onChange={props.handleChange}/>\r\n       \r\n   )\r\n\r\n}","import {React , Component} from \"react\";\n\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor(){\n  super();\n  this.state = {\n    cats : [],\n    searchtext : ''\n  }\n}\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({\n      cats : users\n    }))\n  }\n\n  handleChange = e => {\n    this.setState({searchtext : e.target.value })\n  }\n\n\n  render() {\n    const {cats , searchtext} = this.state;\n    const filteredCats = cats.filter(cat => \n      cat.name.toLowerCase().includes(searchtext.toLowerCase()) )\n\n    return (\n      <div className=\"App\">\n      <h1>Cats Rolodex</h1>\n      <SearchBox placeholder='search cat' handleChange={this.handleChange}/>\n      <CardList cats={filteredCats}/>\n      </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}